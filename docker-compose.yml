services:
  bot:
    profiles: [ "mireabot" ]
    container_name: mireabot.bot
    image: mireabot
    build:
      context: .
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_started
    networks:
      - mireabot
    volumes:
      - ./configs:/app/config:ro
    environment:
      - BOT_CONFIG_PATH=/app/config/botconf.toml
    command: ["bots"]

  postgres:
    profiles: [ "mireabot" ]
    container_name: mireabot.postgres
    image: "postgres:16-alpine"
    hostname: mireabot.postgres
    restart: unless-stopped
    expose:
      - "5432"
    ports:
      - "0.0.0.0:15432:5432"
    networks:
      - mireabot
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_USER: ${POSTGRES_USER:-$USER}
      POSTGRES_DB: ${POSTGRES_DB:-$USER}
    volumes:
      - mireabot.postgres.data:/var/lib/postgresql/users:rw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s

  migrations:
    image: ghcr.io/kukymbr/goose-docker:3.24.2
    profiles: [ "mireabot" ]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mireabot
    environment:
      - GOOSE_DRIVER=postgres
      - GOOSE_DBSTRING=host=mireabot.postgres port=5432 user=$POSTGRES_USER password=$POSTGRES_PASSWORD dbname=$POSTGRES_DB
    volumes:
      - ./migrations:/migrations

volumes:
  mireabot.postgres.data: {}

networks:
  mireabot:
    driver: bridge
